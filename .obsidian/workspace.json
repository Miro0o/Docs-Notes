{
  "main": {
    "id": "236c1d9627771fcb",
    "type": "split",
    "children": [
      {
        "id": "50c4b588492e2f21",
        "type": "tabs",
        "children": [
          {
            "id": "23826937cf806ecb",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CS/🔑 CS_Core/🥷🏼 Operating System (Tech)/📟 OS Level Programming/🧱 OS Level Programming with C & CPP/Process Management/IPC (Internal)/IPC (Internal).md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          },
          {
            "id": "931f7f7c0cd2386a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CS/🔑 CS_Core/🧬 Computer System/🚀 Virtualization Theory/OS Level Virtualization/eBPF/eBPF.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          },
          {
            "id": "97d3c89635ff5540",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CS/System Architecture Design/☁️ Cloud Native/Cloud Platform (System Level Engineering)/🥋 Orchestration & Management/Remote Procedure Call (RPC)/gRPC/gRPC.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          },
          {
            "id": "5eac7207edd802bf",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CS/🏠 Assets/Universities/🇨🇳 Mainland China/UNDT/编译原理/编译原理.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          },
          {
            "id": "d7af5dee64f10d1a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Architecture.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          }
        ],
        "currentTab": 4
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "564f2067a71baace",
    "type": "split",
    "children": [
      {
        "id": "f0d8637c718ad586",
        "type": "tabs",
        "children": [
          {
            "id": "b5ad63de66a49eac",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "1c3e451d5d887e1a",
            "type": "leaf",
            "state": {
              "type": "starred",
              "state": {}
            }
          },
          {
            "id": "5223ef8df84bc18a",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "tag:#x86_64  ",
                "matchingCase": true,
                "explainSearch": true,
                "collapseAll": true,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "bc1bbe4e86553763",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 443.50271224975586
  },
  "right": {
    "id": "54726125f7c010ef",
    "type": "split",
    "children": [
      {
        "id": "12de273e6366c669",
        "type": "tabs",
        "children": [
          {
            "id": "8fdccc39e4729aaf",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Architecture.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "fdd496f61082f4d1",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Architecture.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "bc3fed679fbda165",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "75d340446efbf18f",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Architecture.md"
              }
            }
          },
          {
            "id": "bec1a7cb65bf0bb9",
            "type": "leaf",
            "state": {
              "type": "git-view",
              "state": {}
            }
          },
          {
            "id": "ba63073784a09fef",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency"
              }
            }
          }
        ],
        "currentTab": 3
      }
    ],
    "direction": "horizontal",
    "width": 324.5,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false,
      "daily-notes:Open today's daily note": false,
      "omnisearch:Omnisearch": false,
      "notion-like-tables:Create Notion-Like table": false,
      "obsidian-excalidraw-plugin:Create new drawing": false
    }
  },
  "active": "d7af5dee64f10d1a",
  "lastOpenFiles": [
    "CS/🏠 Assets/Universities/🇨🇳 Mainland China/UNDT/编译原理/编译原理.md",
    "CS/CyberSecurity/CyberSecurity.md",
    "CS/🔑 CS_Core/👩‍💻 Programming Methodology and Languages/Compiled Languages/👔 C-Based Languages/🥏 C & CPP/C & CPP.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Architecture.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/FAQ.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/📣 FAQ/RISC vs CISC.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/Computer Microarchitectures (Computer Organization).md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Microcomputer Principles & Interfaces.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/🧝🏻‍♀️ von Neumann Based Microarchitecture/📌 Motherboard with von Neumann Architecture Design/Motherboard with von Neumann Architecture Design.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/🧝🏻‍♀️ von Neumann Based Microarchitecture/📌 Motherboard with von Neumann Architecture Design",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/🧝🏻‍♀️ von Neumann Based Microarchitecture/von Neumann Based Microarchitecture.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/Computer Memory/Computer Memory.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/Computer IO System/Computer IO System.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/Computer IO System/Computer IO System.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/Computer IO System/IO Control Methods/IO Control Methods.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/🧝🏻‍♀️ von Neumann Based Microarchitecture/Processors & CPU/Control Unit.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/🧝🏻‍♀️ von Neumann Based Microarchitecture/Processors & CPU/CPU Cache.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/🧝🏻‍♀️ von Neumann Based Microarchitecture/Processors & CPU/Processors & CPU.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/Computer Processors/Microprocessors Unit (MPU)/CPU/CPU.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/🧝🏻‍♀️ von Neumann Based Microarchitecture/Processors & CPU/Processor.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/🧝🏻‍♀️ von Neumann Based Microarchitecture/Main Memory/Real World Examples of Memory Management.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/🧝🏻‍♀️ von Neumann Based Microarchitecture/Main Memory/Memory Access.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/🧝🏻‍♀️ von Neumann Based Microarchitecture/Main Memory/Virtual Memory (Hardware and Control Structure)/Virtual Memory (Hardware and Control Structure).md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/🧝🏻‍♀️ von Neumann Based Microarchitecture/Main Memory/Main Memory.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/🧝🏻‍♀️ von Neumann Based Microarchitecture/Processors & CPU/Register.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/Computer IO System",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/Computer IO System/Data Transmission Modes.md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/Computer Bus (Datapath)/Computer Bus (Datapath).md",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/Computer Bus (Datapath)",
    "CS/🔑 CS_Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization)/Computer Memory",
    "CS/CyberSecurity/🥇 Best Practice/🪆 Reverse Engineering & System & Binary/Disassembly & Dis-compiling",
    "CS/🔑 CS_Core/👩‍💻 Programming Methodology and Languages/🛤️ Program Execution & Compilation System/🚽 Program Load (Loadtime)",
    "Assets/Pics/Screenshot 2023-10-12 at 9.12.57PM.png",
    "Assets/Pics/Screenshot 2023-10-12 at 8.57.52PM.png",
    "Assets/Pics/Screenshot 2023-10-12 at 8.34.16PM.png",
    "Assets/Pics/Screenshot 2023-10-12 at 8.33.41PM.png",
    "Assets/Pics/Screenshot 2023-10-13 at 12.54.00PM.png",
    "Assets/Pics/Screenshot 2023-10-13 at 12.54.00 PM.png",
    "Assets/Pics/Screenshot 2023-10-12 at 9.12.57 PM.png",
    "Assets/Pics/Screenshot 2023-10-12 at 8.57.52 PM.png",
    "Assets/Pics/Screenshot 2023-10-12 at 8.34.16 PM.png",
    "Assets/Pics/Screenshot 2023-10-12 at 8.33.41 PM.png",
    "CS/System Architecture Design/☁️ Cloud Native/🧘🏻 Dev(Sec)Ops (Application Level Engineering)/🛬 Continuous Delivery/Observability & Analysis/Chaos Engineering/Litmus",
    "CS/System Architecture Design/☁️ Cloud Native/🧘🏻 Dev(Sec)Ops (Application Level Engineering)/🛬 Continuous Delivery/Observability & Analysis/Chaos Engineering/Chaos Mesh",
    "CS/System Architecture Design/☁️ Cloud Native/🧘🏻 Dev(Sec)Ops (Application Level Engineering)/🛬 Continuous Delivery/Observability & Analysis/Tracing/OpenTelemetry",
    "CS/System Architecture Design/☁️ Cloud Native/🧘🏻 Dev(Sec)Ops (Application Level Engineering)/🛬 Continuous Delivery/Observability & Analysis/Tracing/Jaeger",
    "CS/CyberSecurity/☠️ Kill Chain/Reverse Tools & Disassemblers/Untitled/Untitled.canvas",
    "CS/🗺 CS_Overview/Test Features/Test Canvans.canvas",
    "CS/🔑 CS_Core/👩‍💻 Languages Programming/ASM/Untitled/Untitled.canvas"
  ]
}