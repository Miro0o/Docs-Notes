{
  "main": {
    "id": "236c1d9627771fcb",
    "type": "split",
    "children": [
      {
        "id": "f18c54b939ed8660",
        "type": "tabs",
        "children": [
          {
            "id": "de327c84455a1398",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CS/🔑 CS Core/🏎️ Computer Networking and Communication/🚀 High Performance Network (HPN) & IDC Technologies/DPDK (Data Plane Development Kits)/DPDK (Data Plane Development Kits).md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          },
          {
            "id": "12ae94e7e974c606",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization) & von Neumann Model/🚦 Computer Processors & Logic Chips/Multiprocessors and Multicore Processors/Multiprocessors and Multicore Processors.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          },
          {
            "id": "cfd2d7aa31d27157",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CS/Academics/🎻 Academic Conference & Journals in Electronics & Information Fields/Security Related Conferences & Journals.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          },
          {
            "id": "de16db53a3a4b29f",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Procedure (Function) Call & Runtime Memory Layout/Procedure (Function) Call & Runtime Memory Layout.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          }
        ],
        "currentTab": 3
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "564f2067a71baace",
    "type": "split",
    "children": [
      {
        "id": "f0d8637c718ad586",
        "type": "tabs",
        "children": [
          {
            "id": "b5ad63de66a49eac",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "5223ef8df84bc18a",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "tag:#parallelism  ",
                "matchingCase": true,
                "explainSearch": true,
                "collapseAll": true,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "bc1bbe4e86553763",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 597.5027122497559,
    "collapsed": true
  },
  "right": {
    "id": "54726125f7c010ef",
    "type": "split",
    "children": [
      {
        "id": "12de273e6366c669",
        "type": "tabs",
        "children": [
          {
            "id": "8fdccc39e4729aaf",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Procedure (Function) Call & Runtime Memory Layout/Procedure (Function) Call & Runtime Memory Layout.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "fdd496f61082f4d1",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Procedure (Function) Call & Runtime Memory Layout/Procedure (Function) Call & Runtime Memory Layout.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "bc3fed679fbda165",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "75d340446efbf18f",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Procedure (Function) Call & Runtime Memory Layout/Procedure (Function) Call & Runtime Memory Layout.md"
              }
            }
          },
          {
            "id": "bec1a7cb65bf0bb9",
            "type": "leaf",
            "state": {
              "type": "git-view",
              "state": {}
            }
          },
          {
            "id": "ba63073784a09fef",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency",
                "showSearch": false,
                "searchQuery": ""
              }
            }
          }
        ],
        "currentTab": 3
      }
    ],
    "direction": "horizontal",
    "width": 324.5
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false,
      "daily-notes:Open today's daily note": false,
      "notion-like-tables:Create Notion-Like table": false,
      "obsidian-excalidraw-plugin:Create new drawing": false,
      "omnisearch:Omnisearch": false
    }
  },
  "active": "de16db53a3a4b29f",
  "lastOpenFiles": [
    "CS/CyberSecurity/🏰 Cybersecurity Basics & InfoSec/🍦 Software Security/🪆 Binary Engineering & Software Analysis/📌 DCA (Dynamic Code Analysis)/DCA (Dynamic Code Analysis).md",
    "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Procedure (Function) Call & Runtime Memory Layout/Procedure (Function) Call & Runtime Memory Layout.md",
    "Assets/Pics/Pasted image 20240610235007.png",
    "CS/🔑 CS Core/🧬 Computer System/Computer System.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Computer Architecture.md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/x86 ISA Based ASM/x86 ISA Based ASM.md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/x86 ISA Based ASM/x86_64 ASM (x64 ASM)/x86_64 ASM (x64 ASM).md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/x86 ISA Based ASM/x86_32 ASM (x86 ASM)/x86_32 ASM (x86 ASM).md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/x86 ISA Based ASM/8086 ASM/8086 ASM.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/CISC (Complex Instruction Set Computer)/x86 Architecture Family (80x86, 8086 family)/x86_32/x86_32.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/CISC (Complex Instruction Set Computer)/x86 Architecture Family (80x86, 8086 family)/x86_64/x86_64.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/CISC (Complex Instruction Set Computer)/x86 Architecture Family (80x86, 8086 family)/8086 ISA.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/CISC (Complex Instruction Set Computer)/x86 Architecture Family (80x86, 8086 family)/x86 Instruction Encoding.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/RISC (Reduced Instruction Set Computer)/ARM Architecture Family/ARM64 Processor (AArch64, ARMv8)/ARM64 Processor (AArch64, ARMv8).md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/CISC (Complex Instruction Set Computer)/x86 Architecture Family (80x86, 8086 family)/x86_32/x86_32 Instructions.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization) & von Neumann Model/🚦 Computer Processors & Logic Chips/📌 Microprocessors Unit (MPU)/CPU (Central Processing Unit)/CPU (Central Processing Unit).md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/Instruction Set Architecture (ISA) & Processor Architecture.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/CISC (Complex Instruction Set Computer)/x86 Architecture Family (80x86, 8086 family)/x86_64/x86_64 Instructions.md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/ASM (Assembly Languages).md",
    "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Program Execution (Runtime).md",
    "CS/🔑 CS Core/🧬 Computer System/Operating System (Theory Part)/OS Processes Management (CPU + Main Memory Resource)/OS Processes Management (CPU + Main Memory Resource).md",
    "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Instruction Execution/Interrupts (Software & Hardware).md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/Programming Methodology and Languages.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization) & von Neumann Model/Computer Memory & Storage/Computer Memory & Storage.md",
    "Assets/Pics/Pasted image 20240610215026.png",
    "CS/🔑 CS Core/🧬 Computer System/Operating System (Theory Part)/OS Memory Management (Main Memory + Secondary Memory Resource)/Address Space.md",
    "CS/🔑 CS Core/🏎️ Computer Networking and Communication/📌 Computer Networking Basics/FAQ.md",
    "CS/🔑 CS Core/🧬 Computer System/Operating System (Theory Part)/Operating System (Theory Part).md",
    "Assets/Pics/Pasted image 20240610152812.png",
    "CS/🔑 CS Core/🥷🏼 Operating System (Engineering Part)/📟 System Level Programming/😴 Operating System Components & Runtime Libraries/🫀 Operating System Kernel (Kernel Mode)/🧑🏽‍🏫 Mini OS Kernels/Fuchsia",
    "CS/🔑 CS Core/🥷🏼 Operating System (Engineering Part)/📟 System Level Programming/😴 Operating System Components & Runtime Libraries/🫀 Operating System Kernel (Kernel Mode)/🧑🏽‍🏫 Mini OS Kernels/seL4",
    "CS/🔑 CS Core/🥷🏼 Operating System (Engineering Part)/📟 System Level Programming/😴 Operating System Components & Runtime Libraries/🫀 Operating System Kernel (Kernel Mode)/🧑🏽‍🏫 Mini OS Kernels/Plan 9",
    "Assets/Pics/Pasted image 20240610132228.png",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/🛠️ Programming Tools Chain/Project Builder & Manager/🔬 Language-Specific Managers/Java Managers/Project Managers/Maven/Maven Repository",
    "CS/🔑 CS Core/🥷🏼 Operating System (Engineering Part)/📟 System Level Programming/OS Level Programming in Different Languages",
    "Assets/Illustrations/Computer Network/dpdk_test.excalidraw.png",
    "Assets/Illustrations/Computer Network/Drawing 2024-06-07 11.13.29.excalidraw.png",
    "Assets/Illustrations/Computer Network/Drawing 2024-06-07 11.13.29.excalidraw.svg",
    "Assets/Illustrations/Computer Network/dpdk_test.excalidraw.svg",
    "Assets/Pics/Pasted Image 20240606165615_645.png",
    "Assets/Pics/Pasted Image 20240606165444_628.png",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/Compiled + Interpreted Languages",
    "CS/🔑 CS Core/🏎️ Computer Networking and Communication/🚀 High Performance Network (HPN) & IDC Technologies/DPDK (Data Plane Development Kits)/DPDK Testing",
    "CS/🔑 CS Core/🥷🏼 Operating System (Engineering Part)/Linux (Derived From UNIX Family)/🔩 Linux Kernel/🤤 Linux Test Project (LTP)",
    "CS/🔑 CS Core/🧬 Computer System/Computing & Computing Systems/High Performance Computing",
    "CS/🔑 CS Core/🍕 Computer Storage & Database Systems/High Performance Storage (HPS)",
    "Untitled.canvas",
    "CS/🏠 Assets/Obsidian Test Features/Test Canvans.canvas",
    "CS/🔑 CS_Core/🧬 Computer System/Operating System (Theory)/IO System/IO Generality (via Abstraction)/File & File System/🎯 File Systems/Disk and Non-rotating File Systems/Untitled.canvas",
    "CS/🔑 CS_Core/🧬 Computer System/Operating System (Theory)/IO System/IO Generality (via Abstraction)/File & File System/🎯 File Systems/Untitled.canvas",
    "CS/🔑 CS_Core/🛣️ Program Execution & Compilation System/🚽 Program Linking & Loading (Link-time & Load-time)/Untitled.canvas",
    "CS/CyberSecurity/☠️ Kill Chain/Reverse Tools & Disassemblers/Untitled/Untitled.canvas",
    "CS/🔑 CS_Core/👩‍💻 Languages Programming/ASM/Untitled/Untitled.canvas"
  ]
}