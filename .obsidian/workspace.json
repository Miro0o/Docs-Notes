{
  "main": {
    "id": "236c1d9627771fcb",
    "type": "split",
    "children": [
      {
        "id": "bd18b504a98e41f1",
        "type": "tabs",
        "children": [
          {
            "id": "169456bc68c9f7db",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Procedure (Function) Call & Runtime Memory Layout/Procedure (Function) Call & Runtime Memory Layout.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          },
          {
            "id": "0c44d10820e09dd6",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/Program, Computer, and Automation.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          },
          {
            "id": "808bbe9f3ef41caa",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/x86 ISA Based ASM/x86 ISA Based ASM.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "564f2067a71baace",
    "type": "split",
    "children": [
      {
        "id": "f0d8637c718ad586",
        "type": "tabs",
        "children": [
          {
            "id": "b5ad63de66a49eac",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "5223ef8df84bc18a",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "tag:#ASM tag:#ISA  ",
                "matchingCase": true,
                "explainSearch": true,
                "collapseAll": true,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "bc1bbe4e86553763",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 692.5027122497559,
    "collapsed": true
  },
  "right": {
    "id": "54726125f7c010ef",
    "type": "split",
    "children": [
      {
        "id": "12de273e6366c669",
        "type": "tabs",
        "children": [
          {
            "id": "8fdccc39e4729aaf",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Procedure (Function) Call & Runtime Memory Layout/Procedure (Function) Call & Runtime Memory Layout.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "fdd496f61082f4d1",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Procedure (Function) Call & Runtime Memory Layout/Procedure (Function) Call & Runtime Memory Layout.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "bc3fed679fbda165",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "75d340446efbf18f",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Procedure (Function) Call & Runtime Memory Layout/Procedure (Function) Call & Runtime Memory Layout.md"
              }
            }
          },
          {
            "id": "bec1a7cb65bf0bb9",
            "type": "leaf",
            "state": {
              "type": "git-view",
              "state": {}
            }
          },
          {
            "id": "ba63073784a09fef",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency",
                "showSearch": false,
                "searchQuery": ""
              }
            }
          }
        ],
        "currentTab": 3
      }
    ],
    "direction": "horizontal",
    "width": 324.5,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false,
      "daily-notes:Open today's daily note": false,
      "notion-like-tables:Create Notion-Like table": false,
      "obsidian-excalidraw-plugin:Create new drawing": false,
      "omnisearch:Omnisearch": false
    }
  },
  "active": "169456bc68c9f7db",
  "lastOpenFiles": [
    "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/Program, Computer, and Automation.md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/x86 ISA Based ASM/x86 ISA Based ASM.md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/ASM (Assembly Languages).md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/Instruction Set Architecture (ISA) & Processor Architecture.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/📌 ISA Basics/Privilege Level & Protection Ring.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/📌 ISA Basics/ISA Basics.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/📌 ISA Basics/Development History of ISA.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/📌 Instruction Basics/Instruction Types.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/📌 Instruction Basics/Instruction Basics.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/📌 Instruction Basics/Instruction Formats.md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/x86 ISA Based ASM/x86 Calling Conventions.md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/x86 ISA Based ASM/8086 ASM (16 bit)/8086 ASM (16 bit).md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/x86 ISA Based ASM/📌 x86 & ABI/x86 & ABI.md",
    "CS/🔑 CS Core/🧬 Computer System/Computer Interfaces & Hardware Drivers/ABI (Application Binary Interface).md",
    "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Procedure (Function) Call & Runtime Memory Layout/Procedure (Function) Call & Runtime Memory Layout.md",
    "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Instruction Execution/Memory Access.md",
    "CS/🔑 CS Core/🧬 Computer System/Operating System & OS Kernel (Theory Part)/OS Memory Management (Main Memory + Secondary Memory Resource)/Address Space.md",
    "CS/🗺 CS Overview/💋 Intro to Computer Science/😤 Information, Data, Number and Math in Digital Systems/Information, Data, Number and Math in Digital Systems.md",
    "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Instruction Execution/Instruction Execution.md",
    "CS/🔑 CS Core/🛣️ Program Execution & Compilation System/🧙🏿‍♀️ Program Execution (Runtime)/Program Execution (Runtime).md",
    "Assets/Pics/x86 registers map.png",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Computer Microarchitectures (Computer Organization) & von Neumann Model/🚦 Computer Processors & Logic Chips/📌 Microprocessors Unit (MPU)/CPU (Central Processing Unit)/📌 Basic CPU Components/Register.md",
    "CS/CyberSecurity/CyberSecurity.md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/x86 ISA Based ASM/x86_64 ASM (x64 ASM)/x86_64 ASM (x64 ASM).md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/Templ.md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/⚡️ ASM Advance/ASM Advance.md",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/⚡️ ASM Advance/Interrupts/Interrupts.md",
    "CS/🗺 CS Overview/💋 Intro to Computer Science/😤 Information, Data, Number and Math in Digital Systems/Media Data",
    "CS/🔑 CS Core/👩‍💻 Programming Methodology and Languages/ASM (Assembly Languages)/RISC-V ISA Based ASM",
    "CS/🔑 CS Core/🧬 Computer System/Computer Architecture/Instruction Set Architecture (ISA) & Processor Architecture/RISC (Reduced Instruction Set Computer)/JVM Instrument Set & Java Bytecode/Java By",
    "Untitled",
    "CS/🔑 CS Core/🏎️ Computer Networking and Communication/📌 Computer Networking Basics (Protocol Part)/0x06 Data Link Layer/Switched LAN/Discovery & Information Sharing Protocols/LLTD (Link Layer Topology Discovery)",
    "CS/🔑 CS Core/🏎️ Computer Networking and Communication/📌 Computer Networking Basics (Protocol Part)/0x06 Data Link Layer/Switched LAN/Discovery & Information Sharing Protocols",
    "CS/🔑 CS Core/🏎️ Computer Networking and Communication/📌 Computer Networking Basics (Protocol Part)/0x06 Data Link Layer/Switched LAN/Discovery & Information Sharing Protocols/LLDP (Link Layer Discovery Protocol)",
    "CS/CyberSecurity/Network Security/🏇 Network Security Basics & Protocols/📱 Application Layer Security Protocols/RADIUS (Remote Authentication Dial-In User Service)",
    "CS/🔑 CS Core/🥷🏼 Operating Systems & Kernels (Engineering Part)/Linux (Derived From UNIX Family)/Linux Distros/Linux Mint",
    "CS/Software Engineering/Web Development/🥪 Middleware/RPC Services/Apache Avro",
    "Assets/Pics/Pasted image 20240831235525.png",
    "Assets/Pics/Pasted image 20240831235416.png",
    "Assets/Pics/Pasted image 20240831235406.png",
    "Assets/Pics/Pasted image 20240831174103.png",
    "Assets/Pics/Pasted image 20240831173426.png",
    "Assets/Pics/640.webp",
    "Assets/Pics/640 (1).webp",
    "Assets/Pics/640 (2).webp",
    "Assets/Pics/Screenshot 2024-08-28 at 23.41.06.png",
    "Untitled.canvas",
    "CS/🏠 Assets/Obsidian Test Features/Test Canvans.canvas",
    "CS/🔑 CS_Core/🧬 Computer System/Operating System (Theory)/IO System/IO Generality (via Abstraction)/File & File System/🎯 File Systems/Disk and Non-rotating File Systems/Untitled.canvas",
    "CS/🔑 CS_Core/🧬 Computer System/Operating System (Theory)/IO System/IO Generality (via Abstraction)/File & File System/🎯 File Systems/Untitled.canvas",
    "CS/🔑 CS_Core/🛣️ Program Execution & Compilation System/🚽 Program Linking & Loading (Link-time & Load-time)/Untitled.canvas",
    "CS/CyberSecurity/☠️ Kill Chain/Reverse Tools & Disassemblers/Untitled/Untitled.canvas",
    "CS/🔑 CS_Core/👩‍💻 Languages Programming/ASM/Untitled/Untitled.canvas"
  ]
}